{"version":3,"sources":["Components/UI/Navbar/Navbar.module.css","Components/Landing/Landing.module.css","Containers/Exercises/Exercise4/Exercise4.module.css","Components/Landing/Landing.js","Components/UI/Navbar/Navbar.js","Containers/Timer/Timer.js","Containers/Exercises/Exercise1/Exercise1.js","Containers/Exercises/Exercise2/Exercise2.js","Containers/Exercises/Exercise3/Exercise3.js","Containers/Exercises/Exercise4/Exercise4.js","Containers/Exercises/Exercises.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","startExercise","props","history","push","className","classes","Container","Heading","onClick","this","Component","navbar","Navbar","to","exact","activeClassName","LinkActive","Link","Timer","minutes","seconds","state","myInterval","setInterval","setState","clearInterval","Exercise1","_isMounted","text","next","start","full","nextExercise","fullInstructions","setTimeout","buttonName","withRouter","Exercise2","prevExercise","goBack","Exercise3","Exercise4","restartExercise","replace","finishedHandler","exercises","Fragment","path","component","App","Exercises","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f2d0ee2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__H8kGE\",\"LinkActive\":\"Navbar_LinkActive__3sv_f\",\"Link\":\"Navbar_Link__uleU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Landing_Container__2XxbL\",\"Landing\":\"Landing_Landing__1WO5s\",\"Heading\":\"Landing_Heading__2Rl8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Exercise4\":\"Exercise4_Exercise4__k0dNe\"};","import React, {Component} from 'react';\r\nimport classes from './Landing.module.css';\r\n\r\nclass Landing extends Component{\r\n\r\n   startExercise = ()=>{\r\n      this.props.history.push('/exercises');\r\n   }\r\n\r\n   render(){\r\n      return (\r\n         <div className={classes.Container}>\r\n            <div className={classes.Landing}>\r\n               <div className={classes.Heading}>\r\n                  <h1>Relaxeye</h1>\r\n                  <p>Relaxe your eyes</p>\r\n               </div>\r\n               <p>\r\n                  The average person looks at their smartphone '?' times per day. All that staring from frequent phone use, computer use, and TV-watching can all lead to eye strain.\r\n               </p>\r\n               <p>\r\n                  Eye relaxation exercises reduce eye strain which in turn can increases the flexibility of your eye muscles.\r\n               </p>\r\n               <p>\r\n                  <em>Exercise source : Youtube</em>\r\n               </p>\r\n               <button onClick={this.startExercise}>START</button>\r\n            </div>\r\n         </div>\r\n         \r\n      );  \r\n   }\r\n}\r\n   \r\nexport default Landing;\r\n\r\n","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navbar =()=>{\r\n   return (\r\n      <div className={classes.Navbar}>\r\n         <NavLink to='/' exact >Relaxeye</NavLink>\r\n         <ul >\r\n            <li>\r\n               <NavLink to='/exercises' exact \r\n               activeClassName={classes.LinkActive}\r\n               className={classes.Link}>\r\n                  1\r\n               </NavLink>\r\n            </li>\r\n            <li>\r\n               <NavLink to='/exercises/2' exact activeClassName={classes.LinkActive}\r\n               className={classes.Link}>\r\n                  2\r\n               </NavLink>\r\n            </li>\r\n            <li>\r\n               <NavLink to='/exercises/3' exact activeClassName={classes.LinkActive}\r\n               className={classes.Link}>\r\n                  3\r\n               </NavLink>\r\n            </li>\r\n            <li>\r\n               <NavLink to='/exercises/4' exact activeClassName={classes.LinkActive}\r\n               className={classes.Link}>\r\n                  4\r\n               </NavLink>\r\n            </li>\r\n         </ul>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default navbar;","import React, {Component} from 'react';\r\n\r\nclass Timer extends Component{\r\n   minutes = this.props.minutes === '0' ? 0 : this.props.minutes; \r\n   seconds = this.props.seconds === '0' ? 0 : this.props.seconds;\r\n   state = {\r\n      minutes: this.minutes,\r\n      seconds: this.seconds\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.myInterval = setInterval(() => {\r\n          const { seconds, minutes } = this.state\r\n\r\n          if (seconds > 0) {\r\n              this.setState(({ seconds }) => ({\r\n                  seconds: seconds - 1\r\n              }))\r\n          }\r\n          if (seconds === 0) {\r\n              if (minutes === 0) {\r\n                  clearInterval(this.myInterval)\r\n              } else {\r\n                  this.setState(({ minutes }) => ({\r\n                      minutes: minutes - 1,\r\n                      seconds: 59\r\n                  }))\r\n              }\r\n          } \r\n      }, 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      clearInterval(this.myInterval)\r\n  }\r\n\r\n  render() {\r\n      const { minutes, seconds } = this.state\r\n      return (\r\n          <div>\r\n              { minutes === 0 && seconds === 0\r\n                  ? <p>Patience level 100. Good! :)</p>\r\n                  : <p>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</p>\r\n              }\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Timer;","import React, {Component} from 'react';\r\nimport '../common.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Timer from '../../Timer/Timer';\r\n\r\n class Exercise1 extends Component{\r\n   _isMounted = false;\r\n   state = {\r\n      text : '',\r\n      next : false,\r\n      start: false,\r\n      full : false\r\n   }\r\n\r\n   componentDidMount(){\r\n      this._isMounted = true;\r\n         setTimeout(()=>{\r\n            if(this._isMounted)\r\n               this.setState({text:'Move your eyes up and down for 5 breaths'})\r\n            setTimeout(()=>{\r\n               if(this._isMounted)\r\n                  this.setState({text:'Move your eyes left and right for 5 breaths'})\r\n               setTimeout(()=>{\r\n                  if(this._isMounted)\r\n                     this.setState({text:'Move your eyes diagonally from left to right for 5 breaths'})\r\n                  setTimeout(()=>{\r\n                     if(this._isMounted)\r\n                        this.setState({text:'Move your eyes diagonally from right to left for 5 breaths'})\r\n                     setTimeout(()=>{\r\n                        if(this._isMounted)\r\n                           this.setState({text:'START!',next:true, start:true}) \r\n                     },3000)\r\n                  },3000)\r\n               },3000)\r\n            },3000)\r\n         }, 1000)\r\n      }\r\n\r\n   componentWillUnmount(){\r\n      this._isMounted = false;\r\n   }\r\n\r\n   nextExercise =()=>{\r\n      this.props.history.push('/exercises/2');\r\n   }\r\n\r\n   fullInstructions = ()=>{\r\n      this.setState({\r\n         full : true\r\n      })\r\n   }\r\n\r\n    render(){\r\n      const fullInstructions = (<div className='Exercise' >\r\n         <h3>Full Instruction</h3>\r\n         <ol className='Ol'>\r\n            <li>Move your eyes up and down for 5 breaths</li>\r\n            <li>Move your eyes left and right for 5 breaths</li>\r\n            <li>Move your eyes diagonally from left to right for 5 breaths</li>\r\n            <li>Move your eyes diagonally from right to left for 5 breaths</li>\r\n         </ol>\r\n         </div>\r\n      );\r\n      const buttonName = this.state.next ? 'NEXT' : 'SKIP'; \r\n      return (\r\n         <div className='Container'>\r\n            <div className='Exercise'>\r\n               <h1>8 Directions</h1>\r\n               <p>In a stable relaxed position</p>\r\n               <p className='Instruction'>{this.state.text}</p>\r\n            </div>\r\n         {this.state.start?<Timer minutes='0' seconds='45'/>:null}\r\n         {this.state.start?\r\n            <button onClick={this.fullInstructions}>\r\n               Full Instructions\r\n            </button>\r\n         :null}\r\n         <button onClick={this.nextExercise}>{buttonName}</button>\r\n         {this.state.full ? fullInstructions : null}\r\n         </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default withRouter(Exercise1);","import React, {Component} from 'react';\r\nimport '../common.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Timer from '../../Timer/Timer';\r\n\r\n class Exercise2 extends Component{\r\n   _isMounted = false;\r\n   state = {\r\n      text : '',\r\n      next : false,\r\n      start : false,\r\n      full : false\r\n   }\r\n\r\n   componentDidMount(){\r\n      this._isMounted = true;\r\n         setTimeout(()=>{\r\n            if(this._isMounted)\r\n               this.setState({text:\"Move your eyes in the shape of figure '8'. Repeat this for 5 breaths\"})\r\n               setTimeout(()=>{\r\n                  if(this._isMounted)\r\n                     this.setState({text:'START!',next:true, start:true}) \r\n               },4000)\r\n         }, 1000)\r\n      }\r\n\r\n   componentWillUnmount(){\r\n      this._isMounted = false;\r\n   }\r\n\r\n   nextExercise =()=>{\r\n      this.props.history.push('/exercises/3');\r\n   }\r\n   prevExercise = ()=>{\r\n      this.props.history.goBack();\r\n   }\r\n\r\n   fullInstructions = ()=>{\r\n      this.setState({\r\n         full : true\r\n      })\r\n   }\r\n    render(){\r\n      const buttonName = this.state.next ? 'NEXT' : 'SKIP';\r\n      const fullInstructions = (<div className='Exercise'>\r\n         <h3>Full Instruction</h3>\r\n         <ol className='Ol'>\r\n            <li>Move your eyes in the shape of figure '8'.</li>\r\n            <li>Repeat this for 5 breaths</li>\r\n         </ol>\r\n         </div>\r\n      );\r\n      return (\r\n         <div className='Container'>\r\n            <div className='Exercise'>\r\n               <h1>Figure 8</h1>\r\n               <p>In a stable relaxed position</p>\r\n               <p className='Instruction'>{this.state.text}</p>\r\n            </div>\r\n            {this.state.start?<Timer minutes='0' seconds='30'/>:null}\r\n            <button onClick={this.prevExercise}>BACK</button>\r\n            {this.state.start?\r\n            <button onClick={this.fullInstructions}>\r\n               Full Instructions\r\n            </button>\r\n            :null}\r\n            <button onClick={this.nextExercise}>{buttonName}</button>\r\n            {this.state.full ? fullInstructions : null}\r\n         </div>\r\n      );\r\n    }\r\n}\r\n\r\n// In a stable relaxed postion,  move your eyes up and down , left and right, diagnally right and diagnally each for 5 breaths\r\n\r\nexport default withRouter(Exercise2);","import React, {Component} from 'react';\r\nimport '../common.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Timer from '../../Timer/Timer';\r\n\r\n\r\n class Exercise3 extends Component{\r\n   _isMounted = false;\r\n   state = {\r\n      text : '',\r\n      next : false,\r\n      start : false,\r\n      full : false\r\n   }\r\n\r\n   componentDidMount(){\r\n      this._isMounted = true;\r\n         setTimeout(()=>{\r\n            if(this._isMounted)\r\n               this.setState({text:'Hold your two index fingers horizontally opposite with 2 inches gap in between also about 8 inches front of your face and eye level.'})\r\n            setTimeout(()=>{\r\n               if(this._isMounted)\r\n                  this.setState({text:'Look across the room, with aware of your fingers, you will see a little hotdog in between your fingers.'})\r\n               setTimeout(()=>{\r\n                  if(this._isMounted)\r\n                     this.setState({text:'The hotdog will disappear once you focus on it.'})\r\n                  setTimeout(()=>{\r\n                     if(this._isMounted)\r\n                        this.setState({text:'Repeat for 10 times, 1 breath across the room and 1 breath getting rid off hotdog.', next: true})\r\n                        setTimeout(()=>{\r\n                           if(this._isMounted)\r\n                              this.setState({text:'START!',next:true, start:true}) \r\n                        },4000)\r\n                  },3000)\r\n               },5000)\r\n            },5000)\r\n         }, 1000)\r\n      }\r\n\r\n   componentWillUnmount(){\r\n      this._isMounted = false;\r\n   }\r\n\r\n   nextExercise =()=>{\r\n      this.props.history.push('/exercises/4');\r\n   }\r\n   prevExercise = ()=>{\r\n      this.props.history.goBack();\r\n   }\r\n\r\n   fullInstructions = ()=>{\r\n      this.setState({\r\n         full : true\r\n      })\r\n   }\r\n\r\n    render(){\r\n      const buttonName = this.state.next ? 'NEXT' : 'SKIP';\r\n      const fullInstructions = (<div className='Exercise'>\r\n         <h3>Full Instruction</h3>\r\n         <ol className='Ol'>\r\n            <li>Hold your two index fingers horizontally opposite with 2 inches gap in between also about 8 inches front of your face and eye level.</li>\r\n            <li>Look across the room, with aware of your fingers, you will see a little hotdog in between your fingers.</li>\r\n            <li>The hotdog will disappear once you focus on it.</li>\r\n            <li>Repeat for 10 times, 1 breath across the room and 1 breath getting rid off hotdog.</li>\r\n         </ol>\r\n         </div>\r\n      ); \r\n      return (\r\n         <div className='Container'>\r\n            <div className='Exercise'>\r\n               <h1>Hotdog</h1>\r\n               <p>In a stable relaxed position</p>\r\n               <p className='Instruction'>{this.state.text}</p>\r\n            </div>\r\n            {this.state.start?<Timer minutes='0' seconds='45'/>:null}\r\n            <button onClick={this.prevExercise}>BACK</button>\r\n            {this.state.start?\r\n            <button onClick={this.fullInstructions}>\r\n               Full Instructions\r\n            </button>\r\n            :null}\r\n            <button onClick={this.nextExercise}>{buttonName}</button>\r\n            {this.state.full ? fullInstructions : null}\r\n         </div>\r\n      );\r\n    }\r\n}\r\n\r\n// In a stable relaxed postion,  move your eyes up and down , left and right, diagnally right and diagnally each for 5 breaths\r\n\r\nexport default withRouter(Exercise3);","import React, {Component} from 'react';\r\nimport classes from './Exercise4.module.css';\r\nimport '../common.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Timer from '../../Timer/Timer';\r\n\r\n class Exercise4 extends Component{\r\n   _isMounted = false;\r\n   state = {\r\n      text : '',\r\n      start : false,\r\n      full : false\r\n   }\r\n\r\n   componentDidMount(){\r\n      this._isMounted = true;\r\n         setTimeout(()=>{\r\n            if(this._isMounted)\r\n               this.setState({text:'Relax your shoulders. Rub your hands with little friction for 15 seconds until it get warm'})\r\n            setTimeout(()=>{\r\n               if(this._isMounted)\r\n                  this.setState({text:'Once the hands feel warm and nice, cover the eyes placing the heels of your hands on the cheekbones resting the palm on the brow bones and letting the fingertips rest on your skull.'})\r\n               setTimeout(()=>{\r\n                  if(this._isMounted)\r\n                     this.setState({text:'Feel the warmth of the hands and darkness. Notice if you see any flashes of light. Let your breath be natural and smooth. When lights and the colors fade to black open your eyes into the darkness'})\r\n                  setTimeout(()=>{\r\n                     if(this._isMounted)\r\n                        this.setState({text:'START!', start:true}) \r\n                  },7000)\r\n               },7000)\r\n            },5000)\r\n         }, 1000)\r\n      }\r\n\r\n   componentWillUnmount(){\r\n      this._isMounted = false;\r\n   }\r\n\r\n   restartExercise =()=>{\r\n      this.props.history.replace('/exercises');\r\n   }\r\n\r\n   finishedHandler =()=>{\r\n      this.props.history.replace('/')\r\n   }\r\n\r\n   fullInstructions = ()=>{\r\n      this.setState({\r\n         full : true\r\n      })\r\n   }\r\n\r\n    render(){\r\n      const fullInstructions = (<div className='Exercise'>\r\n      <h3>Full Instruction</h3>\r\n      <ol className='Ol'>\r\n         <li>Relax your shoulders. Rub your hands with little friction for 15 seconds until it get warm</li>\r\n         <li>Once the hands feel warm and nice, cover the eyes placing the heels of your hands on the cheekbones resting the palm on the brow bones and letting the fingertips rest on your skull.</li>\r\n         <li>Feel the warmth of the hands and darkness. Notice if you see any flashes of light. Let your breath be natural and smooth. When lights and the colors fade to black open your eyes into the darkness</li>\r\n      </ol>\r\n      </div>\r\n      ); \r\n      return (\r\n         <div className='Container'>\r\n            <div className={classes.Exercise4}>\r\n               <h1>Rub Rub</h1>\r\n               <p>For the last time<br/>In a stable relaxed position</p>\r\n               <p className='Instruction'>{this.state.text}</p>\r\n            </div>\r\n            {this.state.start?<Timer minutes='1' seconds='10'/>:null}\r\n            <button onClick={this.restartExercise}>RESTART</button>\r\n            {this.state.start?\r\n            <button onClick={this.fullInstructions}>\r\n               Full Instructions\r\n            </button>\r\n            :null}\r\n            <button onClick={this.finishedHandler}>FINISH</button>\r\n            {this.state.full ? fullInstructions : null}\r\n         </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default withRouter(Exercise4);","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Navbar from '../../Components/UI/Navbar/Navbar';\r\nimport Exercise1 from './Exercise1/Exercise1';\r\nimport Exercise2 from './Exercise2/Exercise2';\r\nimport Exercise3 from './Exercise3/Exercise3';\r\nimport Exercise4 from './Exercise4/Exercise4';\r\n\r\nconst exercises = ()=> {\r\n   return (\r\n      <React.Fragment>\r\n         <Navbar/>\r\n         <Switch>\r\n            <Route path='/exercises/4' component={Exercise4}/>\r\n            <Route path='/exercises/3' exact component={Exercise3}/>\r\n            <Route path='/exercises/2' exact component={Exercise2}/>\r\n            <Route path='/exercises' exact component={Exercise1}/>\r\n         </Switch>\r\n      </React.Fragment>\r\n   );\r\n}\r\n\r\nexport default exercises;","import React from 'react';\nimport Landing from './Components/Landing/Landing';\nimport Exercises from './Containers/Exercises/Exercises';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/exercises' component={Exercises} />\n        <Route path='/' exact component={Landing} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}